<?php

namespace Belca\FileHandler\Contracts;

/**
 * Адаптер обработки файла.
 *
 * Задачи адаптера:
 * - слияние переданных настроек указанным методом;
 * - вызов обработки файла по указанному сценарию (если используется).
 */
class FileHandlerAdapter
{
    public function __construct($file, $config = [], $script = null);

    /**
     * Объедиянет переданные конфигурации обработчика указанным методом и
     * возвращает их.
     *
     * @param  string $mergeMethod Метод слияния
     * @param  mixed  $configs     Перечисление настроек обработчика
     * @return mixed
     */
    public static function merge($mergeMethod, ...$configs);

    /**
     * Устанавливает конфигурацию обработки файла.
     *
     * @param mixed $config
     */
    public function setConfig($config = []);

    /**
     * Устанавливает значение сценария действий.
     *
     * @param string $script
     */
    public function setScript($script);

    /**
     * Запускает обработку файла по указанному сценарию. В случае ошибки,
     * при обработке файла, вернет false.
     *
     * @param  string $script
     * @return boolean
     */
    public function handle($script = null);

    /**
     * Возвращает всю информацию о всех файлах, в т.ч. пути к файлам.
     *
     * @return mixed
     */
    public function getInfo();

    // TODO: Все основные данные должны быть возвращены или должны использоваться
    // какие-то общепринятые данные или методы возврата.
    //
    // Для первой обработки файла это могут быть путь, способ обработки,
    // размер файла и т.п.
    //
    // Для второй обработки файла (отдельного), часть информации может уже существовать
    // и соответственно она не нужна, если не будет изменена.
    //
    //  Поэтому вернуть нужно будет только новую информацию, а это может быть
    //  цвета файла. Для цветов не предназначена общее хранилище и поэтому они
    //  будут переданы в опциях.
    //
    //  Для третей обработке файла могут быть перегенерированы файлы и нужно
    //  будет вернуть всю информацию.
    //
    //  Можно объявить все методы, но они не будут реализовываться или возвращать
    //  пустоту.
    //
    //  Хотя главный файл может тоже возвращать эту информацию и может быть изменен.
    //
    //  Возвращаемая информация должна принадлежать какому-то файлу, а их может быть много.
    //  Соответственно должно быть правильное слияние данных


}
